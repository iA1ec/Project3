#BlueJ class context
comment0.target=Simulation
comment0.text=\n\ A\ Class\ to\ simulation\ the\ deliveries\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=
comment10.target=Graph\ getGraph()
comment10.text=\n\ A\ Method\ to\ return\ the\ graph\ of\ the\ city\n\ @return\ Graph\ \ Returns\ the\ graph\ of\ the\ city\n
comment2.params=
comment2.target=Simulation()
comment2.text=\n\ A\ Constructor\ for\ the\ Simulation\n
comment3.params=shopsFileName\ warehousesFileName
comment3.target=void\ readInData(java.lang.String,\ java.lang.String)
comment3.text=\n\ A\ Method\ to\ read\ in\ the\ given\ data\n\ @param\ shopsFileName\ \ \ \ \ \ \ The\ name\ of\ the\ file\ with\ the\ shops\n\ @param\ WarehousesFileName\ \ The\ name\ of\ the\ file\ with\ the\ warehouses\ \n
comment4.params=
comment4.target=void\ addEdges()
comment4.text=\n\ A\ Method\ to\ add\ an\ edge\ from\ all\ vertices\ to\ all\ shops\ in\ the\ graph\n
comment5.params=
comment5.target=void\ loadTrucks()
comment5.text=\n\ A\ Method\ to\ load\ all\ of\ the\ trucks\ to\ prepare\ for\ deliveries\n
comment6.params=
comment6.target=void\ sendTrucks()
comment6.text=\n\ A\ Method\ to\ send\ all\ of\ the\ trucks\ out\ to\ make\ deliveries\n\ Also\ calculates\ the\ total\ distance\ travelled\n
comment7.params=
comment7.target=void\ printTrucks()
comment7.text=\n\ A\ Method\ to\ print\ out\ all\ of\ the\ trucks\n
comment8.params=
comment8.target=int\ numOfUnfulfilledSupplies()
comment8.text=\n\ A\ Method\ to\ check\ if\ all\ of\ the\ cargos\ are\ delivered\n\ @return\ int\ \ Returns\ the\ number\ of\ cargo's\ that\ aren't\ delivered\n
comment9.params=
comment9.target=boolean\ checkSatisfied()
comment9.text=\n\ A\ method\ to\ check\ if\ all\ shops\ have\ been\ fulfilled\n\ @return\ boolean\ \ returns\ true\ if\ all\ shops\ are\ fulfilled,\ else\ false\n
numComments=11
